@using Microsoft.Extensions.Configuration
@inject IConfiguration Configuration
@using MADBHR.Enum
@{
    ViewData["Title"] = "Create TrainingHistory";
    ViewData["Action"] = ViewEnum.Action.Create.ToDescription();
}

<partial name="_PartialForm" />
@section Scripts
{
    <link href="~/Content/css/common.css" rel="stylesheet" type="text/css" />

    <script>
        const commonUrl = @Json.Serialize(@Configuration.GetSection("AppUrls").GetSection("TestUrl").Value);

        $(document).ready(function () {

            $("#dvCertificatePreview").attr("src", $('#CertificateImageContent').val());
            $("#dvCertificatePreview").attr("class", "thumbnail");

        });

        $("#dvCertificatePreview").click(function (e) {
            $("#fileCertificateupload").click();
        });

        $("#fileCertificateupload").change(function () {
            $("#dvCertificatePreview").html("");
            var regex = /^([a-zA-Z0-9\s_\\.\-:])+(.jpg|.jpeg|.gif|.png|.bmp|.svg|.doc|.docx|.xlsx|.xls|.pptx|.kml|.gpx|.shp|.cmz|.pdf|.mp3|.mp4)$/;
            if (regex.test($(this).val().toLowerCase())) {
                if (typeof (FileReader) != "undefined") {
                    $("#dvCertificatePreview").show();
                    var reader = new FileReader();
                    reader.onload = function (e) {
                        $("#CertificateImageContent").val(e.target.result);
                        $("#dvCertificatePreview").attr("src", e.target.result);
                    }
                    reader.readAsDataURL($(this)[0].files[0]);
                } else {
                    alert("This browser does not support FileReader.");
                }
            } else {
                alert("Please upload a valid image file.");
            }
        });

        function ChangeNumber() {
            debugger;
            var serialNumber = $("#field-1").val();
            console.log("serialnumber:", serialNumber);
            $.ajax({

                url: commonUrl+ `/EmployeeDisposal/GetEmployeeInformation?SerialNumber=${serialNumber}`,
                type: 'get',
                success: function (res) {
                    if (res) {
                        $("#field-name").val(res.name);
                        $("#field-rank").val(res.rankType);
                        if (res.status == "Pending" || res.status == "Reject") {
                            Swal.fire({
                                title: '',
                                text: "This Employee is not Approve!",
                                icon: 'warning',
                                showCancelButton: false,
                                confirmButtonColor: '#3085d6',
                                cancelButtonColor: '#d33',
                                confirmButtonText: 'OK'
                            }).then((result) => {
                                if (result.isConfirmed) {
                                    window.location.href = commonUrl+"/TrainingHistory/Index";
                                }
                            })

                        }
                    }

                }

            });

        }
    </script>
}
